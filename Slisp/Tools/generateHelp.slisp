(set outpath (nth sys.args 0))
(set lines
  (list
    "<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en' >"
    (format "<head><title>{sys.version} API Documentation</title></head>")
    (format "<body><h1>{sys.version} API Documentation</h1>")
  )
)

(def isFunc (symName)
  (fn? (unquote (symbol symName))))

(for sym in (filter isFunc (symbols))
  (let  ((doc      (help.doc sym))
         (sigs     (help.signatures sym))
         (examples (help.examples sym)))
    (if (not (empty? sigs))
      (begin
        (push-back! lines (format "<hr/><b><![CDATA[{sym}]]></b><p/>"))
        (for sig in sigs
          (push-back! lines (format "Usage: <![CDATA[{sig}]]><br/>")))
        (push-back! lines "<p/>")
        (if (not (empty? doc))
          (push-back! lines (format "<![CDATA[{doc}]]><br/>")))
        (if (not (empty? examples))
          (begin
            (push-back! lines "<br/>Examples:<br/>")
            (for example in examples
              (push-back! lines (format "<![CDATA[>>> {0}]]><br/>" (nth example 0)))
              (push-back! lines (format "<![CDATA[{0}]]><br/>" (nth example 1))))))))))

(push-back! lines "</body></html>")
(file.writelines outpath lines)
